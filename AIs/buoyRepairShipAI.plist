{
	GLOBAL = {ENTER = (switchLightsOff, "pauseAI: 1"); UPDATE = ("setStateTo: HEAD_FOR_PLANET"); };
	FLEE = {
		ATTACKED = (fightOrFleeHostiles);
		FIGHTING = (setTargetToPrimaryAggressor, "setStateTo: ATTACK_SHIP");
		FLEEING = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
		"TARGET_LOST" = (performIdle, "setStateTo: GLOBAL");
		"TARGET_DESTROYED" = (performIdle, "setStateTo: GLOBAL");
		ENTER = ("setDesiredRangeTo: 25600", performFlee);
		"INCOMING_MISSILE" = (setTargetToPrimaryAggressor, broadcastDistressMessage, fightOrFleeMissile, fightOrFleeHostiles);
		"REACHED_SAFETY" = (performIdle, "setStateTo: GLOBAL");
	};
	"ATTACK_SHIP" = {
		"ENERGY_LOW" = (setTargetToPrimaryAggressor, broadcastDistressMessage, "setStateTo: FLEE");
		ENTER = (broadcastDistressMessage, performAttack);
		"INCOMING_MISSILE" = (setTargetToPrimaryAggressor, broadcastDistressMessage, fightOrFleeMissile, "setStateTo: FLEE");
		"TARGET_DESTROYED" = ("setStateTo: HEAD_FOR_PLANET");
		"TARGET_LOST" = ("setStateTo: HEAD_FOR_PLANET");
	};
	"GO_TO_STATION" = {
		ENTER = (setTargetToStation, "setDesiredRangeTo: 5000.0", setDestinationToTarget, checkCourseToDestination, switchLightsOff);
		"COURSE_OK" = ("setSpeedFactorTo: 0.5", performFlyToRangeFromDestination);
		"WAYPOINT_SET" = ("setAITo: gotoWaypointAI.plist");
		"DESIRED_RANGE_ACHIEVED" = (dockEscorts, setTargetToStation, "setAITo: dockingAI.plist");
		"DOCKING_REFUSED" = ("switchAITo: route2sunskimAI.plist");
		"TARGET_FOUND" = (fightOrFleeHostiles);
		"INCOMING_MISSILE" = (setTargetToPrimaryAggressor, broadcastDistressMessage, fightOrFleeMissile, fightOrFleeHostiles, "setStateTo: FLEE");
		ATTACKED = (fightOrFleeHostiles);
		FIGHTING = (setTargetToPrimaryAggressor, "setStateTo: ATTACK_SHIP");
		FLEEING = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
		UPDATE = (
			setTargetToStation,
			"setDesiredRangeTo: 5000.0",
			setDestinationToTarget,
			checkCourseToDestination,
			scanForHostiles,
			"pauseAI: 10.0"
		);
	};
	"DOCK_AT_MAIN_STATION" = {
		"DOCKING_REFUSED" = ("switchAITo: route2sunskimAI.plist");
		UPDATE = (setTargetToSystemStation, "setAITo: dockingAI.plist", switchLightsOff);
	};
	"HEAD_FOR_PLANET" = {
		ENTER = ("setSpeedFactorTo: 0.25", switchLightsOff);
		"COURSE_OK" = ("setSpeedFactorTo: 0.95", performFlyToRangeFromDestination);
		"WAYPOINT_SET" = ("setAITo: gotoWaypointAI.plist");
		"DESIRED_RANGE_ACHIEVED" = ("setStateTo: GO_TO_STATION");
		"TARGET_FOUND" = (fightOrFleeHostiles);
		"INCOMING_MISSILE" = (setTargetToPrimaryAggressor, broadcastDistressMessage, fightOrFleeMissile, fightOrFleeHostiles, "setStateTo: FLEE");
		ATTACKED = (fightOrFleeHostiles);
		FIGHTING = (setTargetToPrimaryAggressor, "setStateTo: ATTACK_SHIP");
		FLEEING = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
		UPDATE = (
			"sendScriptMessage: findGRSStation",
			setDestinationToTarget,
			"setDesiredRangeTo: 15000.0",
			checkCourseToDestination,
			scanForHostiles,
			"pauseAI: 10.0"
		);
	};
	"MOVE_OUT" = {
		ENTER = (switchLightsOff, setDestinationToCurrentLocation, "setDesiredRangeTo: 1500.0", performFlyToRangeFromDestination, "setSpeedFactorTo: 0.4");
		"ATTACKED" = (fightOrFleeHostiles);
		"INCOMING_MISSILE" = (fireECM);
		"DESIRED_RANGE_ACHIEVED" = ("setStateTo: EXIT_SYSTEM");
		UPDATE = ("pauseAI: 10.0");
	};
	"EXIT_SYSTEM" = {
		ENTER = ("pauseAI: 1.0");
		UPDATE = (performHyperSpaceExitWithoutReplacing, "pauseAI: 10.0");
		"WITCHSPACE OKAY" = (wormholeEscorts);
		"WITCHSPACE BLOCKED" = (setTargetToFoundTarget, setDestinationWithinTarget, "setDesiredRangeTo: 10000.0", performFlyToRangeFromDestination, "setSpeedFactorTo: 1.0", "sendScriptMessage: hyperspaceHelp");
		"WITCHSPACE UNAVAILABLE" = ("setAITo: route1traderAI.plist");
	};
	"GO_WITCHPOINT" = {
		ENTER = (setDestinationToWitchpoint, performFlyToRangeFromDestination, "pauseAI: 15.0");
		"DESIRED_RANGE_ACHIEVED" = ("setSpeedFactorTo: 1.0", "pauseAI: 15.0", "setStateTo: EXIT_SYSTEM");
		ATTACKED = (fightOrFleeHostiles);
		FIGHTING = (setTargetToPrimaryAggressor, "setStateTo: ATTACK_SHIP");
		FLEEING = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
		"INCOMING_MISSILE" = (fightOrFleeMissile, "setStateTo: FLEE");
		UPDATE = ("setStateTo: EXIT_SYSTEM");
	};
}